{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamPage({\n  user,\n  onLogout\n}) {\n  _s();\n  var _paper$questions;\n  const videoRef = useRef(null);\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\n  const [warningShown, setWarningShown] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes\n  const [logs, setLogs] = useState([]);\n  const [paper, setPaper] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const multipleFaceActive = useRef(false);\n  const startTimeRef = useRef(null);\n  const navigate = useNavigate();\n\n  // --- Load exam paper & models ---\n  useEffect(() => {\n    const loadModelsAndExam = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n\n        // Fetch exam paper\n        const res = await fetch(`${process.env.REACT_APP_API_BASE || 'http://localhost:4000/api'}/exam/paper`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        if (!res.ok) throw new Error(`Server responded with status ${res.status}`);\n        const data = await res.json();\n        console.log(\"Exam paper fetched:\", data);\n        if (!data || !data.questions || !data.questions.length) {\n          throw new Error(\"No questions returned from server\");\n        }\n        setPaper(data);\n        setAnswers(new Array(data.questions.length).fill(null));\n\n        // Start camera\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (err) {\n        console.error(\"Failed to load exam:\", err);\n        alert(\"Failed to load exam. Please check console for details.\");\n      }\n    };\n    loadModelsAndExam();\n  }, []);\n\n  // --- Tab switch detection ---\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) setTabSwitchCount(prev => prev + 1);\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, []);\n  useEffect(() => {\n    if (tabSwitchCount === 2 && !warningShown) {\n      alert(\"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\");\n      setWarningShown(true);\n    } else if (tabSwitchCount >= 3) {\n      alert(\"❌ You switched tabs too many times. Your exam will be auto-submitted now.\");\n      handleSubmit();\n    }\n  }, [tabSwitchCount]);\n\n  // --- Timer countdown ---\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  // --- Multiple face detection ---\n  useEffect(() => {\n    if (!paper) return;\n    const interval = setInterval(async () => {\n      if (!videoRef.current) return;\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions());\n      if (detections.length > 1) {\n        if (!multipleFaceActive.current) {\n          multipleFaceActive.current = true;\n          const startTime = new Date();\n          startTimeRef.current = startTime;\n          setLogs(prev => [...prev, `Multiple faces started at ${startTime.toLocaleTimeString()}`]);\n        }\n\n        // Send event to backend\n        try {\n          await fetch(`${process.env.REACT_APP_API_BASE || 'http://localhost:4000/api'}/exam/proctor-event`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: JSON.stringify({\n              examId: paper.examId || paper._id,\n              type: \"multiple-face\",\n              data: {\n                message: `Detected ${detections.length} faces`\n              }\n            })\n          });\n        } catch (err) {\n          console.error(\"Error sending multiple face log:\", err);\n        }\n      } else if (multipleFaceActive.current) {\n        multipleFaceActive.current = false;\n        const endTime = new Date();\n        const duration = Math.round((endTime - startTimeRef.current) / 1000);\n        setLogs(prev => [...prev, `Multiple faces ended at ${endTime.toLocaleTimeString()} (Duration: ${duration}s)`]);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [paper]);\n  const formatTime = seconds => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n  };\n  const handleAnswerChange = (index, value) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = value;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = async () => {\n    if (!paper) {\n      alert(\"Exam data not loaded!\");\n      return;\n    }\n\n    // Confirm submission\n    const confirmSubmit = window.confirm(\"Are you sure you want to submit your exam?\");\n    if (!confirmSubmit) return;\n    try {\n      console.log(\"Submitting exam...\", {\n        userId: user._id,\n        examId: paper.examId || paper._id,\n        answers: answers\n      });\n      const response = await fetch(\"http://localhost:4000/api/exam/submit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          userId: user._id,\n          examId: paper.examId || paper._id,\n          answers: answers\n        })\n      });\n      console.log(\"Response status:\", response.status);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Submit failed:\", errorText);\n        throw new Error(`Submit failed: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Submit response:\", data);\n      if (data.submissionId) {\n        alert(\"✅ Exam submitted successfully!\");\n        // Navigate to result page\n        navigate(`/result/${data.submissionId}`);\n      } else {\n        throw new Error(\"No submission ID returned\");\n      }\n    } catch (error) {\n      console.error(\"Submit error:\", error);\n      alert(\"❌ Failed to submit exam. Please try again or contact support.\");\n    }\n  };\n  if (!paper || !paper.questions) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading exam...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 42\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container exam-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Online Exam Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"\\u23F1\\uFE0F Time Left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-content\",\n        children: [(_paper$questions = paper.questions) === null || _paper$questions === void 0 ? void 0 : _paper$questions.map((q, i) => {\n          var _q$options;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Q\", i + 1, \": \", q.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options\",\n              children: (_q$options = q.options) === null || _q$options === void 0 ? void 0 : _q$options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `q${i}`,\n                  checked: answers[i] === idx,\n                  onChange: () => handleAnswerChange(i, idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this), opt]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          style: {\n            width: \"300px\",\n            borderRadius: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Camera Monitoring Active \\uD83C\\uDFA5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Face Detection Logs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: logs.map((log, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: log\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamPage, \"rRStGLDp3DP8UFIBNJtDaISQQD4=\", false, function () {\n  return [useNavigate];\n});\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","faceapi","useNavigate","jsxDEV","_jsxDEV","ExamPage","user","onLogout","_s","_paper$questions","videoRef","tabSwitchCount","setTabSwitchCount","warningShown","setWarningShown","timeLeft","setTimeLeft","logs","setLogs","paper","setPaper","answers","setAnswers","multipleFaceActive","startTimeRef","navigate","loadModelsAndExam","MODEL_URL","process","env","PUBLIC_URL","nets","tinyFaceDetector","loadFromUri","res","fetch","REACT_APP_API_BASE","headers","Authorization","localStorage","getItem","ok","Error","status","data","json","console","log","questions","length","Array","fill","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","err","error","alert","handleVisibilityChange","document","hidden","prev","addEventListener","removeEventListener","handleSubmit","timer","setTimeout","clearTimeout","interval","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","startTime","Date","toLocaleTimeString","method","body","JSON","stringify","examId","_id","type","message","endTime","duration","Math","round","clearInterval","formatTime","seconds","min","floor","sec","handleAnswerChange","index","value","newAnswers","confirmSubmit","window","confirm","userId","response","errorText","text","submissionId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","q","i","_q$options","options","opt","idx","name","checked","onChange","onClick","ref","autoPlay","muted","style","width","borderRadius","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles.css\";\r\n\r\nexport default function ExamPage({ user, onLogout }) {\r\n  const videoRef = useRef(null);\r\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\r\n  const [warningShown, setWarningShown] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes\r\n  const [logs, setLogs] = useState([]);\r\n  const [paper, setPaper] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const multipleFaceActive = useRef(false);\r\n  const startTimeRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // --- Load exam paper & models ---\r\n  useEffect(() => {\r\n    const loadModelsAndExam = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n\r\n        // Fetch exam paper\r\n       const res = await fetch(`${process.env.REACT_APP_API_BASE || 'http://localhost:4000/api'}/exam/paper`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        });\r\n\r\n        if (!res.ok) throw new Error(`Server responded with status ${res.status}`);\r\n        const data = await res.json();\r\n        console.log(\"Exam paper fetched:\", data);\r\n\r\n        if (!data || !data.questions || !data.questions.length) {\r\n          throw new Error(\"No questions returned from server\");\r\n        }\r\n\r\n        setPaper(data);\r\n        setAnswers(new Array(data.questions.length).fill(null));\r\n\r\n        // Start camera\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\r\n        if (videoRef.current) videoRef.current.srcObject = stream;\r\n      } catch (err) {\r\n        console.error(\"Failed to load exam:\", err);\r\n        alert(\"Failed to load exam. Please check console for details.\");\r\n      }\r\n    };\r\n\r\n    loadModelsAndExam();\r\n  }, []);\r\n\r\n  // --- Tab switch detection ---\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) setTabSwitchCount((prev) => prev + 1);\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (tabSwitchCount === 2 && !warningShown) {\r\n      alert(\"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\");\r\n      setWarningShown(true);\r\n    } else if (tabSwitchCount >= 3) {\r\n      alert(\"❌ You switched tabs too many times. Your exam will be auto-submitted now.\");\r\n      handleSubmit();\r\n    }\r\n  }, [tabSwitchCount]);\r\n\r\n  // --- Timer countdown ---\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft]);\r\n\r\n  // --- Multiple face detection ---\r\n  useEffect(() => {\r\n    if (!paper) return;\r\n\r\n    const interval = setInterval(async () => {\r\n      if (!videoRef.current) return;\r\n\r\n      const detections = await faceapi.detectAllFaces(\r\n        videoRef.current,\r\n        new faceapi.TinyFaceDetectorOptions()\r\n      );\r\n\r\n      if (detections.length > 1) {\r\n        if (!multipleFaceActive.current) {\r\n          multipleFaceActive.current = true;\r\n          const startTime = new Date();\r\n          startTimeRef.current = startTime;\r\n          setLogs((prev) => [...prev, `Multiple faces started at ${startTime.toLocaleTimeString()}`]);\r\n        }\r\n\r\n        // Send event to backend\r\n        try {\r\nawait fetch(`${process.env.REACT_APP_API_BASE || 'http://localhost:4000/api'}/exam/proctor-event`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            body: JSON.stringify({\r\n              examId: paper.examId || paper._id,\r\n              type: \"multiple-face\",\r\n              data: { message: `Detected ${detections.length} faces` },\r\n            }),\r\n          });\r\n        } catch (err) {\r\n          console.error(\"Error sending multiple face log:\", err);\r\n        }\r\n      } else if (multipleFaceActive.current) {\r\n        multipleFaceActive.current = false;\r\n        const endTime = new Date();\r\n        const duration = Math.round((endTime - startTimeRef.current) / 1000);\r\n        setLogs((prev) => [\r\n          ...prev,\r\n          `Multiple faces ended at ${endTime.toLocaleTimeString()} (Duration: ${duration}s)`,\r\n        ]);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [paper]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const min = Math.floor(seconds / 60);\r\n    const sec = seconds % 60;\r\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\r\n  };\r\n\r\n  const handleAnswerChange = (index, value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n  if (!paper) {\r\n    alert(\"Exam data not loaded!\");\r\n    return;\r\n  }\r\n\r\n  // Confirm submission\r\n  const confirmSubmit = window.confirm(\"Are you sure you want to submit your exam?\");\r\n  if (!confirmSubmit) return;\r\n\r\n  try {\r\n    console.log(\"Submitting exam...\", {\r\n      userId: user._id,\r\n      examId: paper.examId || paper._id,\r\n      answers: answers\r\n    });\r\n\r\n    const response = await fetch(\"http://localhost:4000/api/exam/submit\", {\r\n      method: \"POST\",\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user._id,\r\n        examId: paper.examId || paper._id,\r\n        answers: answers,\r\n      }),\r\n    });\r\n\r\n    console.log(\"Response status:\", response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error(\"Submit failed:\", errorText);\r\n      throw new Error(`Submit failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Submit response:\", data);\r\n\r\n    if (data.submissionId) {\r\n      alert(\"✅ Exam submitted successfully!\");\r\n      // Navigate to result page\r\n      navigate(`/result/${data.submissionId}`);\r\n    } else {\r\n      throw new Error(\"No submission ID returned\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Submit error:\", error);\r\n    alert(\"❌ Failed to submit exam. Please try again or contact support.\");\r\n  }\r\n};\r\n\r\n  if (!paper || !paper.questions) return <div>Loading exam...</div>;\r\n\r\n  return (\r\n    <div className=\"container exam-page\">\r\n      <div className=\"exam-header\">\r\n        <h2>Online Exam Portal</h2>\r\n        <div className=\"timer\">⏱️ Time Left: {formatTime(timeLeft)}</div>\r\n      </div>\r\n\r\n      <div className=\"exam-body\">\r\n        <div className=\"exam-content\">\r\n          {paper.questions?.map((q, i) => (\r\n            <div key={i} className=\"question\">\r\n              <h3>Q{i + 1}: {q.text}</h3>\r\n              <div className=\"options\">\r\n                {q.options?.map((opt, idx) => (\r\n                  <label key={idx}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`q${i}`}\r\n                      checked={answers[i] === idx}\r\n                      onChange={() => handleAnswerChange(i, idx)}\r\n                    />\r\n                    {opt}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit}>Submit Exam</button>\r\n        </div>\r\n\r\n        <div className=\"camera-preview\">\r\n          <video ref={videoRef} autoPlay muted style={{ width: \"300px\", borderRadius: \"8px\" }} />\r\n          <p>Camera Monitoring Active 🎥</p>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Face Detection Logs:</h3>\r\n          <ul>\r\n            {logs.map((log, i) => (\r\n              <li key={i}>{log}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}