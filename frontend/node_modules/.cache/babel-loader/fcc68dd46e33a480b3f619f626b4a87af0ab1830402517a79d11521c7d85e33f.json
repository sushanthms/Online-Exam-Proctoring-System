{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport \"../styles.css\";\nimport SubmissionPage from \"./SubmissionPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamPage({\n  user,\n  onLogout\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [tabSwitches, setTabSwitches] = useState([]);\n  const [multipleFaceLogs, setMultipleFaceLogs] = useState([]);\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\n  const [warningShown, setWarningShown] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes\n  const multipleFaceActive = useRef(false);\n  const startTimeRef = useRef(null);\n  const [showSubmission, setShowSubmission] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submissionResult, setSubmissionResult] = useState(null);\n\n  // --- Load models and start camera ---\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => videoRef.current.srcObject = stream).catch(err => console.error(\"Camera error:\", err));\n    };\n    loadModels();\n  }, []);\n\n  // --- Fetch exam questions ---\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const res = await fetch(\"/api/exam/paper\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          }\n        });\n        const data = await res.json();\n        console.log(\"Fetched exam:\", data);\n        setQuestions(data.questions || []);\n        setAnswers(data.questions.map(() => null)); // initialize answers array\n      } catch (err) {\n        console.error(\"Error fetching exam:\", err);\n        alert(\"Error loading exam paper. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExam();\n  }, []);\n\n  // --- Tab switch detection ---\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        setTabSwitchCount(prev => prev + 1);\n        setTabSwitches(prev => [...prev, {\n          timestamp: new Date()\n        }]);\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, []);\n  useEffect(() => {\n    if (tabSwitchCount === 2 && !warningShown) {\n      alert(\"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\");\n      setWarningShown(true);\n    } else if (tabSwitchCount >= 3) {\n      alert(\"❌ You switched tabs too many times. Auto-submitting exam.\");\n      handleSubmit();\n    }\n  }, [tabSwitchCount]);\n\n  // --- Timer ---\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(t => t - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  // --- Multiple face detection ---\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (!videoRef.current) return;\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions());\n      if (detections.length > 1 && !multipleFaceActive.current) {\n        multipleFaceActive.current = true;\n        startTimeRef.current = new Date();\n      } else if (detections.length <= 1 && multipleFaceActive.current) {\n        multipleFaceActive.current = false;\n        const endTime = new Date();\n        const duration = Math.round((endTime - startTimeRef.current) / 1000);\n        setMultipleFaceLogs(prev => [...prev, {\n          startTime: startTimeRef.current,\n          endTime,\n          duration\n        }]);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // --- Handle answer selection ---\n  const handleAnswer = (index, optionIndex) => {\n    const updated = [...answers];\n    updated[index] = optionIndex;\n    setAnswers(updated);\n  };\n\n  // --- Submit exam ---\n  const handleSubmit = async () => {\n    try {\n      const submissionData = {\n        userId: user._id,\n        username: user.name,\n        examId: \"EXAM001\",\n        answers: questions.map((q, i) => ({\n          questionId: q.id,\n          selectedOption: answers[i]\n        })),\n        tabSwitches,\n        multipleFaceLogs\n      };\n      const res = await fetch(\"/api/exam/submitExam\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify(submissionData)\n      });\n      if (!res.ok) throw new Error(\"Exam submission failed\");\n      const result = await res.json();\n      console.log(\"Submission result:\", result);\n      setSubmissionResult(result);\n      setShowSubmission(true);\n    } catch (err) {\n      console.error(err);\n      alert(\"Error submitting exam. Please try again.\");\n    }\n  };\n\n  // --- Time formatting ---\n  const formatTime = seconds => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n  };\n\n  // --- Show submission summary ---\n  if (showSubmission) {\n    return /*#__PURE__*/_jsxDEV(SubmissionPage, {\n      user: user,\n      examId: \"EXAM001\",\n      result: submissionResult,\n      onBack: () => setShowSubmission(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n  // --- Loading screen ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 23\n  }, this);\n  if (!questions || questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No questions found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 52\n  }, this);\n\n  // --- Render exam page ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container exam-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Online Exam Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        style: {\n          float: \"right\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"\\u23F1\\uFE0F Time Left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-content\",\n        children: [questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: q.q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: q.options.map((opt, j) => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${i}`,\n                checked: answers[i] === j,\n                onChange: () => handleAnswer(i, j)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), opt]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          style: {\n            width: \"300px\",\n            borderRadius: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Camera Monitoring Active \\uD83C\\uDFA5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamPage, \"bwHXk7DEYceXR3i035nWT/iPErw=\");\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","faceapi","SubmissionPage","jsxDEV","_jsxDEV","ExamPage","user","onLogout","_s","videoRef","questions","setQuestions","answers","setAnswers","tabSwitches","setTabSwitches","multipleFaceLogs","setMultipleFaceLogs","tabSwitchCount","setTabSwitchCount","warningShown","setWarningShown","timeLeft","setTimeLeft","multipleFaceActive","startTimeRef","showSubmission","setShowSubmission","loading","setLoading","submissionResult","setSubmissionResult","loadModels","MODEL_URL","process","env","PUBLIC_URL","nets","tinyFaceDetector","loadFromUri","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","fetchExam","res","fetch","headers","Authorization","localStorage","getItem","data","json","log","map","alert","handleVisibilityChange","document","hidden","prev","timestamp","Date","addEventListener","removeEventListener","handleSubmit","timer","setTimeout","t","clearTimeout","interval","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","length","endTime","duration","Math","round","startTime","clearInterval","handleAnswer","index","optionIndex","updated","submissionData","userId","_id","username","name","examId","q","i","questionId","id","selectedOption","method","body","JSON","stringify","ok","Error","result","formatTime","seconds","min","floor","sec","onBack","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","style","float","options","opt","j","type","checked","onChange","ref","autoPlay","muted","width","borderRadius","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport \"../styles.css\";\r\nimport SubmissionPage from \"./SubmissionPage\";\r\n\r\nexport default function ExamPage({ user, onLogout }) {\r\n  const videoRef = useRef(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [tabSwitches, setTabSwitches] = useState([]);\r\n  const [multipleFaceLogs, setMultipleFaceLogs] = useState([]);\r\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\r\n  const [warningShown, setWarningShown] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes\r\n  const multipleFaceActive = useRef(false);\r\n  const startTimeRef = useRef(null);\r\n  const [showSubmission, setShowSubmission] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submissionResult, setSubmissionResult] = useState(null);\r\n\r\n  // --- Load models and start camera ---\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true })\r\n        .then((stream) => (videoRef.current.srcObject = stream))\r\n        .catch((err) => console.error(\"Camera error:\", err));\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  // --- Fetch exam questions ---\r\n  useEffect(() => {\r\n    const fetchExam = async () => {\r\n      try {\r\n        const res = await fetch(\"/api/exam/paper\", {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        console.log(\"Fetched exam:\", data);\r\n        setQuestions(data.questions || []);\r\n        setAnswers(data.questions.map(() => null)); // initialize answers array\r\n      } catch (err) {\r\n        console.error(\"Error fetching exam:\", err);\r\n        alert(\"Error loading exam paper. Please try again.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchExam();\r\n  }, []);\r\n\r\n  // --- Tab switch detection ---\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        setTabSwitchCount((prev) => prev + 1);\r\n        setTabSwitches((prev) => [...prev, { timestamp: new Date() }]);\r\n      }\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    return () =>\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (tabSwitchCount === 2 && !warningShown) {\r\n      alert(\r\n        \"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\"\r\n      );\r\n      setWarningShown(true);\r\n    } else if (tabSwitchCount >= 3) {\r\n      alert(\"❌ You switched tabs too many times. Auto-submitting exam.\");\r\n      handleSubmit();\r\n    }\r\n  }, [tabSwitchCount]);\r\n\r\n  // --- Timer ---\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => setTimeLeft((t) => t - 1), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft]);\r\n\r\n  // --- Multiple face detection ---\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (!videoRef.current) return;\r\n      const detections = await faceapi.detectAllFaces(\r\n        videoRef.current,\r\n        new faceapi.TinyFaceDetectorOptions()\r\n      );\r\n\r\n      if (detections.length > 1 && !multipleFaceActive.current) {\r\n        multipleFaceActive.current = true;\r\n        startTimeRef.current = new Date();\r\n      } else if (detections.length <= 1 && multipleFaceActive.current) {\r\n        multipleFaceActive.current = false;\r\n        const endTime = new Date();\r\n        const duration = Math.round((endTime - startTimeRef.current) / 1000);\r\n        setMultipleFaceLogs((prev) => [\r\n          ...prev,\r\n          { startTime: startTimeRef.current, endTime, duration },\r\n        ]);\r\n      }\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // --- Handle answer selection ---\r\n  const handleAnswer = (index, optionIndex) => {\r\n    const updated = [...answers];\r\n    updated[index] = optionIndex;\r\n    setAnswers(updated);\r\n  };\r\n\r\n  // --- Submit exam ---\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const submissionData = {\r\n        userId: user._id,\r\n        username: user.name,\r\n        examId: \"EXAM001\",\r\n        answers: questions.map((q, i) => ({\r\n          questionId: q.id,\r\n          selectedOption: answers[i],\r\n        })),\r\n        tabSwitches,\r\n        multipleFaceLogs,\r\n      };\r\n\r\n      const res = await fetch(\"/api/exam/submitExam\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify(submissionData),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Exam submission failed\");\r\n\r\n      const result = await res.json();\r\n      console.log(\"Submission result:\", result);\r\n      setSubmissionResult(result);\r\n      setShowSubmission(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error submitting exam. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // --- Time formatting ---\r\n  const formatTime = (seconds) => {\r\n    const min = Math.floor(seconds / 60);\r\n    const sec = seconds % 60;\r\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\r\n  };\r\n\r\n  // --- Show submission summary ---\r\n  if (showSubmission) {\r\n    return (\r\n      <SubmissionPage\r\n        user={user}\r\n        examId=\"EXAM001\"\r\n        result={submissionResult}\r\n        onBack={() => setShowSubmission(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n  // --- Loading screen ---\r\n  if (loading) return <p>Loading questions...</p>;\r\n\r\n  if (!questions || questions.length === 0) return <p>No questions found.</p>;\r\n\r\n  // --- Render exam page ---\r\n  return (\r\n    <div className=\"container exam-page\">\r\n      <div className=\"exam-header\">\r\n        <h2>Online Exam Portal</h2>\r\n        <button onClick={onLogout} style={{ float: \"right\" }}>\r\n          Logout\r\n        </button>\r\n        <div className=\"timer\">⏱️ Time Left: {formatTime(timeLeft)}</div>\r\n      </div>\r\n\r\n      <div className=\"exam-body\">\r\n        <div className=\"exam-content\">\r\n          {questions.map((q, i) => (\r\n            <div key={q.id} className=\"question\">\r\n              <h3>{q.q}</h3>\r\n              <div className=\"options\">\r\n                {q.options.map((opt, j) => (\r\n                  <label key={j}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`q${i}`}\r\n                      checked={answers[i] === j}\r\n                      onChange={() => handleAnswer(i, j)}\r\n                    />\r\n                    {opt}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit}>Submit Exam</button>\r\n        </div>\r\n\r\n        <div className=\"camera-preview\">\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            style={{ width: \"300px\", borderRadius: \"8px\" }}\r\n          />\r\n          <p>Camera Monitoring Active 🎥</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}