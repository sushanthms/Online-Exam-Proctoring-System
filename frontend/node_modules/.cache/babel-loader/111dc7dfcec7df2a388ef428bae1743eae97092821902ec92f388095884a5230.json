{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { authApi } from \"../api\"; // your existing API helper\nimport \"./RegisterPage.css\";\nimport FaceRegistration from \"./FaceRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage({\n  onRegistered\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"student\");\n  const [secretKey, setSecretKey] = useState(\"\"); // admin\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [registeredUser, setRegisteredUser] = useState(null);\n  const [modelsLoaded, setModelsLoaded] = useState(false);\n  const [status, setStatus] = useState(\"initial\"); // initial, ready, capturing, captured, success, error\n  const [captureCount, setCaptureCount] = useState(0);\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\n  const [showFaceRegistration, setShowFaceRegistration] = useState(false);\n  const [userRegistered, setUserRegistered] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectionInterval = useRef(null);\n\n  // --- Load face-api models ---\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = \"/models\";\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n      setModelsLoaded(true);\n    };\n    loadModels();\n  }, []);\n\n  // --- Start camera ---\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      videoRef.current.srcObject = stream;\n      setStatus(\"ready\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Cannot access camera.\");\n    }\n  };\n\n  // --- Stop camera ---\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  // --- Average descriptors ---\n  const averageDescriptors = descriptors => {\n    const avg = new Array(128).fill(0);\n    descriptors.forEach(desc => {\n      desc.forEach((val, idx) => avg[idx] += val);\n    });\n    return avg.map(val => val / descriptors.length);\n  };\n\n  // --- Capture face samples ---\n  const startCapture = () => {\n    if (!registeredUser) {\n      alert(\"Register first to capture face!\");\n      return;\n    }\n    setStatus(\"capturing\");\n    setCaptureCount(0);\n    const descriptors = [];\n    detectionInterval.current = setInterval(async () => {\n      if (!videoRef.current) return;\n      try {\n        const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n        if (detection) {\n          descriptors.push(Array.from(detection.descriptor));\n          setCaptureCount(prev => prev + 1);\n\n          // Draw on canvas\n          if (canvasRef.current) {\n            const dims = faceapi.matchDimensions(canvasRef.current, videoRef.current, true);\n            const resized = faceapi.resizeResults(detection, dims);\n            const ctx = canvasRef.current.getContext(\"2d\");\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            faceapi.draw.drawDetections(canvasRef.current, resized);\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\n          }\n          if (descriptors.length >= 5) {\n            clearInterval(detectionInterval.current);\n            const avgDesc = averageDescriptors(descriptors);\n            setCapturedDescriptor(avgDesc);\n            setStatus(\"captured\");\n          }\n        }\n      } catch (err) {\n        console.error(\"Detection error:\", err);\n      }\n    }, 500);\n  };\n\n  // --- Send face to backend ---\n  const saveFace = async () => {\n    if (!capturedDescriptor) return;\n    setStatus(\"saving\");\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(\"http://localhost:4000/api/auth/register-face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: registeredUser._id,\n          faceDescriptor: capturedDescriptor\n        })\n      });\n      if (res.ok) {\n        setStatus(\"success\");\n        stopCamera();\n        alert(\"âœ… Face registered successfully!\");\n      } else {\n        throw new Error(\"Face registration failed\");\n      }\n    } catch (err) {\n      console.error(err);\n      setStatus(\"error\");\n      alert(\"Failed to save face. Try again.\");\n    }\n  };\n\n  // --- Register user ---\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const res = await authApi.register({\n        name,\n        email,\n        password,\n        role,\n        secretKey\n      });\n      setMessage(res.data.message);\n      setUserRegistered(res.data.user);\n      // Show face registration after account is created\n      setShowFaceRegistration(true);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Registration failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), role === \"admin\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Admin Secret Key\",\n          value: secretKey,\n          onChange: e => setSecretKey(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 32\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Registering...\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), registeredUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-registration\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFA5 Face Capture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          width: \"320\",\n          height: \"240\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: \"320\",\n          height: \"240\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: startCamera,\n            disabled: !modelsLoaded || status === \"capturing\",\n            children: \"Start Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveFace,\n            disabled: status !== \"captured\",\n            children: \"Save Face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), status === \"capturing\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capturing: \", captureCount, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"mYnRtdDJZwFkKThfWs2WRxGKp9Y=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","faceapi","authApi","FaceRegistration","jsxDEV","_jsxDEV","RegisterPage","onRegistered","_s","name","setName","email","setEmail","password","setPassword","role","setRole","secretKey","setSecretKey","message","setMessage","loading","setLoading","registeredUser","setRegisteredUser","modelsLoaded","setModelsLoaded","status","setStatus","captureCount","setCaptureCount","capturedDescriptor","setCapturedDescriptor","showFaceRegistration","setShowFaceRegistration","userRegistered","setUserRegistered","videoRef","canvasRef","detectionInterval","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","height","current","srcObject","err","console","error","alert","stopCamera","getTracks","forEach","track","stop","averageDescriptors","descriptors","avg","Array","fill","desc","val","idx","map","length","startCapture","setInterval","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","push","from","descriptor","prev","dims","matchDimensions","resized","resizeResults","ctx","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","clearInterval","avgDesc","saveFace","token","localStorage","getItem","res","fetch","method","headers","Authorization","body","JSON","stringify","userId","_id","faceDescriptor","ok","Error","handleRegister","e","preventDefault","register","data","user","_err$response","_err$response$data","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","ref","autoPlay","onClick","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/RegisterPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { authApi } from \"../api\"; // your existing API helper\r\nimport \"./RegisterPage.css\";\r\nimport FaceRegistration from \"./FaceRegistration\";\r\n\r\n\r\nexport default function RegisterPage({ onRegistered }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"student\");\r\n  const [secretKey, setSecretKey] = useState(\"\"); // admin\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [registeredUser, setRegisteredUser] = useState(null);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n  const [status, setStatus] = useState(\"initial\"); // initial, ready, capturing, captured, success, error\r\n  const [captureCount, setCaptureCount] = useState(0);\r\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\r\n  const [showFaceRegistration, setShowFaceRegistration] = useState(false);\r\nconst [userRegistered, setUserRegistered] = useState(null);\r\n\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const detectionInterval = useRef(null);\r\n\r\n  // --- Load face-api models ---\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = \"/models\";\r\n      await Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ]);\r\n      setModelsLoaded(true);\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  // --- Start camera ---\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: { width: 640, height: 480 } });\r\n      videoRef.current.srcObject = stream;\r\n      setStatus(\"ready\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Cannot access camera.\");\r\n    }\r\n  };\r\n\r\n  // --- Stop camera ---\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n  };\r\n\r\n  // --- Average descriptors ---\r\n  const averageDescriptors = (descriptors) => {\r\n    const avg = new Array(128).fill(0);\r\n    descriptors.forEach(desc => {\r\n      desc.forEach((val, idx) => avg[idx] += val);\r\n    });\r\n    return avg.map(val => val / descriptors.length);\r\n  };\r\n\r\n  // --- Capture face samples ---\r\n  const startCapture = () => {\r\n    if (!registeredUser) {\r\n      alert(\"Register first to capture face!\");\r\n      return;\r\n    }\r\n\r\n    setStatus(\"capturing\");\r\n    setCaptureCount(0);\r\n    const descriptors = [];\r\n\r\n    detectionInterval.current = setInterval(async () => {\r\n      if (!videoRef.current) return;\r\n      try {\r\n        const detection = await faceapi\r\n          .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n\r\n        if (detection) {\r\n          descriptors.push(Array.from(detection.descriptor));\r\n          setCaptureCount(prev => prev + 1);\r\n\r\n          // Draw on canvas\r\n          if (canvasRef.current) {\r\n            const dims = faceapi.matchDimensions(canvasRef.current, videoRef.current, true);\r\n            const resized = faceapi.resizeResults(detection, dims);\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            faceapi.draw.drawDetections(canvasRef.current, resized);\r\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\r\n          }\r\n\r\n          if (descriptors.length >= 5) {\r\n            clearInterval(detectionInterval.current);\r\n            const avgDesc = averageDescriptors(descriptors);\r\n            setCapturedDescriptor(avgDesc);\r\n            setStatus(\"captured\");\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Detection error:\", err);\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  // --- Send face to backend ---\r\n  const saveFace = async () => {\r\n    if (!capturedDescriptor) return;\r\n    setStatus(\"saving\");\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await fetch(\"http://localhost:4000/api/auth/register-face\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ userId: registeredUser._id, faceDescriptor: capturedDescriptor }),\r\n      });\r\n      if (res.ok) {\r\n        setStatus(\"success\");\r\n        stopCamera();\r\n        alert(\"âœ… Face registered successfully!\");\r\n      } else {\r\n        throw new Error(\"Face registration failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setStatus(\"error\");\r\n      alert(\"Failed to save face. Try again.\");\r\n    }\r\n  };\r\n\r\n  // --- Register user ---\r\n  const handleRegister = async (e) => {\r\n  e.preventDefault();\r\n  setLoading(true);\r\n  setMessage(\"\");\r\n  try {\r\n    const res = await authApi.register({ name, email, password, role, secretKey });\r\n    setMessage(res.data.message);\r\n    setUserRegistered(res.data.user);\r\n    // Show face registration after account is created\r\n    setShowFaceRegistration(true);\r\n  } catch (err) {\r\n    setMessage(err.response?.data?.message || \"Registration failed\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-box\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleRegister} className=\"register-form\">\r\n          <input type=\"text\" placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} required />\r\n          <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n          <select value={role} onChange={e => setRole(e.target.value)}>\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"admin\">Admin</option>\r\n          </select>\r\n          {role === \"admin\" && <input type=\"password\" placeholder=\"Admin Secret Key\" value={secretKey} onChange={e => setSecretKey(e.target.value)} required />}\r\n          {message && <div className=\"register-error\">{message}</div>}\r\n          <button type=\"submit\" disabled={loading}>{loading ? \"Registering...\" : \"Register\"}</button>\r\n        </form>\r\n\r\n        {/* Face Capture Section */}\r\n        {registeredUser && (\r\n          <div className=\"face-registration\">\r\n            <h3>ðŸŽ¥ Face Capture</h3>\r\n            <video ref={videoRef} autoPlay width=\"320\" height=\"240\" />\r\n            <canvas ref={canvasRef} width=\"320\" height=\"240\" />\r\n            <div className=\"face-btns\">\r\n              <button type=\"button\" onClick={startCamera} disabled={!modelsLoaded || status === \"capturing\"}>Start Capture</button>\r\n              <button type=\"button\" onClick={saveFace} disabled={status !== \"captured\"}>Save Face</button>\r\n            </div>\r\n            {status === \"capturing\" && <p>Capturing: {captureCount}/5</p>}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}