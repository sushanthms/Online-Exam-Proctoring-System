{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./ExamPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamPage({\n  user,\n  onLogout\n}) {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const videoRef = useRef(null);\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\n  const [warningShown, setWarningShown] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(600);\n  const [logs, setLogs] = useState([]);\n  const [paper, setPaper] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const multipleFaceActive = useRef(false);\n  const startTimeRef = useRef(null);\n  const isSubmitting = useRef(false);\n  const [currentQ, setCurrentQ] = useState(0);\n  const navigate = useNavigate();\n\n  // --- Load exam paper & models ---\n  useEffect(() => {\n    const loadModelsAndExam = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n        const res = await fetch(`http://localhost:4000/api/exam/paper/${examId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        if (!res.ok) throw new Error(`Server responded with status ${res.status}`);\n        const data = await res.json();\n        if (!data || !data.questions || !data.questions.length) {\n          throw new Error(\"No questions returned from server\");\n        }\n        setPaper(data);\n        setAnswers(new Array(data.questions.length).fill(null));\n        setTimeLeft((data.durationMins || 10) * 60);\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (err) {\n        console.error(\"Failed to load exam:\", err);\n        alert(\"Failed to load exam. Returning to home.\");\n        navigate(\"/home\");\n      }\n    };\n    loadModelsAndExam();\n  }, [examId, navigate]);\n\n  // --- Tab switch detection ---\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        setTabSwitchCount(prev => prev + 1);\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, []);\n\n  // --- Tab switch warnings and auto-submit ---\n  useEffect(() => {\n    if (tabSwitchCount === 2 && !warningShown) {\n      alert(\"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\");\n      setWarningShown(true);\n    } else if (tabSwitchCount >= 3) {\n      alert(\"❌ You switched tabs too many times. Your exam will be auto-submitted now.\");\n      handleSubmit();\n    }\n  }, [tabSwitchCount, warningShown]);\n\n  // --- Timer countdown ---\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      alert(\"⏰ Time's up! Your exam will be auto-submitted.\");\n      handleSubmit();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  // --- Multiple face detection ---\n  useEffect(() => {\n    if (!paper) return;\n    const interval = setInterval(async () => {\n      if (!videoRef.current) return;\n      try {\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions());\n        if (detections.length > 1) {\n          if (!multipleFaceActive.current) {\n            multipleFaceActive.current = true;\n            const startTime = new Date();\n            startTimeRef.current = startTime;\n            setLogs(prev => [...prev, `Multiple faces started at ${startTime.toLocaleTimeString()}`]);\n          }\n          try {\n            await fetch(\"http://localhost:4000/api/exam/proctor-event\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n              },\n              body: JSON.stringify({\n                examId: examId,\n                type: \"multiple-face\",\n                data: {\n                  message: `Detected ${detections.length} faces`\n                }\n              })\n            });\n          } catch (err) {\n            console.error(\"Error sending multiple face log:\", err);\n          }\n        } else if (multipleFaceActive.current) {\n          multipleFaceActive.current = false;\n          const endTime = new Date();\n          const duration = Math.round((endTime - startTimeRef.current) / 1000);\n          setLogs(prev => [...prev, `Multiple faces ended at ${endTime.toLocaleTimeString()} (Duration: ${duration}s)`]);\n        }\n      } catch (error) {\n        console.error(\"Face detection error:\", error);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [paper, examId]);\n  const formatTime = seconds => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n  };\n  const handleAnswerChange = value => {\n    const newAnswers = [...answers];\n    newAnswers[currentQ] = value;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = async () => {\n    if (isSubmitting.current) return;\n    if (!paper) {\n      alert(\"Exam data not loaded!\");\n      return;\n    }\n    if (tabSwitchCount < 3 && timeLeft > 0) {\n      const confirmSubmit = window.confirm(\"Are you sure you want to submit your exam?\");\n      if (!confirmSubmit) return;\n    }\n    isSubmitting.current = true;\n    try {\n      const response = await fetch(\"http://localhost:4000/api/exam/submit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          userId: user._id,\n          examId: examId,\n          answers: answers\n        })\n      });\n      if (!response.ok) throw new Error(\"Submit failed\");\n      const data = await response.json();\n      if (data.submissionId) {\n        alert(\"✅ Exam submitted successfully!\");\n        navigate(`/result/${data.submissionId}`);\n      } else {\n        throw new Error(\"No submission ID returned\");\n      }\n    } catch (error) {\n      console.error(\"Submit error:\", error);\n      alert(\"❌ Failed to submit exam. Please try again.\");\n      isSubmitting.current = false;\n    }\n  };\n  if (!paper || !paper.questions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading exam...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we prepare your exam.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n  const question = paper.questions[currentQ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCF7 Camera Monitor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-timer\",\n        children: [\"\\u23F1\\uFE0F \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-face-logs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDC40 Face Detection Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), logs.length ? logs.map((log, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 34\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"exam-face-logs-empty\",\n          children: \"\\u2705 No issues detected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: paper.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), tabSwitchCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-tab-warning\",\n        children: [\"Tab Switches: \", tabSwitchCount, \"/3\", tabSwitchCount >= 2 && \" ⚠️ One more will auto-submit!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Q\", currentQ + 1, \": \", question.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-options\",\n          children: question.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `exam-option-label ${answers[currentQ] === idx ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `q${currentQ}`,\n              checked: answers[currentQ] === idx,\n              onChange: () => handleAnswerChange(idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), opt]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-navigation\",\n        children: [currentQ > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQ(currentQ - 1),\n          className: \"exam-nav-btn\",\n          children: \"\\u2B05\\uFE0F Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), currentQ < paper.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQ(currentQ + 1),\n          className: \"exam-nav-btn\",\n          children: \"Next \\u27A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"exam-submit-btn\",\n          disabled: isSubmitting.current,\n          children: isSubmitting.current ? '⏳ Submitting...' : '🚀 Submit Exam'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamPage, \"9BdecyIpF4dVvLVZIAsekTx024s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","faceapi","useNavigate","useParams","jsxDEV","_jsxDEV","ExamPage","user","onLogout","_s","examId","videoRef","tabSwitchCount","setTabSwitchCount","warningShown","setWarningShown","timeLeft","setTimeLeft","logs","setLogs","paper","setPaper","answers","setAnswers","multipleFaceActive","startTimeRef","isSubmitting","currentQ","setCurrentQ","navigate","loadModelsAndExam","MODEL_URL","process","env","PUBLIC_URL","nets","tinyFaceDetector","loadFromUri","res","fetch","headers","Authorization","localStorage","getItem","ok","Error","status","data","json","questions","length","Array","fill","durationMins","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","alert","handleVisibilityChange","document","hidden","prev","addEventListener","removeEventListener","handleSubmit","timer","setTimeout","clearTimeout","interval","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","startTime","Date","toLocaleTimeString","method","body","JSON","stringify","type","message","endTime","duration","Math","round","clearInterval","formatTime","seconds","min","floor","sec","handleAnswerChange","value","newAnswers","confirmSubmit","window","confirm","response","userId","_id","submissionId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","ref","autoPlay","muted","map","log","i","title","text","options","opt","idx","name","checked","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./ExamPage.css\";\r\n\r\nexport default function ExamPage({ user, onLogout }) {\r\n  const { examId } = useParams();\r\n  const videoRef = useRef(null);\r\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\r\n  const [warningShown, setWarningShown] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(600);\r\n  const [logs, setLogs] = useState([]);\r\n  const [paper, setPaper] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const multipleFaceActive = useRef(false);\r\n  const startTimeRef = useRef(null);\r\n  const isSubmitting = useRef(false);\r\n  const [currentQ, setCurrentQ] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  // --- Load exam paper & models ---\r\n  useEffect(() => {\r\n    const loadModelsAndExam = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n\r\n        const res = await fetch(\r\n          `http://localhost:4000/api/exam/paper/${examId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n          }\r\n        );\r\n\r\n        if (!res.ok) throw new Error(`Server responded with status ${res.status}`);\r\n        const data = await res.json();\r\n\r\n        if (!data || !data.questions || !data.questions.length) {\r\n          throw new Error(\"No questions returned from server\");\r\n        }\r\n\r\n        setPaper(data);\r\n        setAnswers(new Array(data.questions.length).fill(null));\r\n        setTimeLeft((data.durationMins || 10) * 60);\r\n\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) videoRef.current.srcObject = stream;\r\n      } catch (err) {\r\n        console.error(\"Failed to load exam:\", err);\r\n        alert(\"Failed to load exam. Returning to home.\");\r\n        navigate(\"/home\");\r\n      }\r\n    };\r\n\r\n    loadModelsAndExam();\r\n  }, [examId, navigate]);\r\n\r\n  // --- Tab switch detection ---\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        setTabSwitchCount((prev) => prev + 1);\r\n      }\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, []);\r\n\r\n  // --- Tab switch warnings and auto-submit ---\r\n  useEffect(() => {\r\n    if (tabSwitchCount === 2 && !warningShown) {\r\n      alert(\"⚠️ Warning: You switched tabs! One more switch will auto-submit your exam.\");\r\n      setWarningShown(true);\r\n    } else if (tabSwitchCount >= 3) {\r\n      alert(\"❌ You switched tabs too many times. Your exam will be auto-submitted now.\");\r\n      handleSubmit();\r\n    }\r\n  }, [tabSwitchCount, warningShown]);\r\n\r\n  // --- Timer countdown ---\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      alert(\"⏰ Time's up! Your exam will be auto-submitted.\");\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft]);\r\n\r\n  // --- Multiple face detection ---\r\n  useEffect(() => {\r\n    if (!paper) return;\r\n\r\n    const interval = setInterval(async () => {\r\n      if (!videoRef.current) return;\r\n\r\n      try {\r\n        const detections = await faceapi.detectAllFaces(\r\n          videoRef.current,\r\n          new faceapi.TinyFaceDetectorOptions()\r\n        );\r\n\r\n        if (detections.length > 1) {\r\n          if (!multipleFaceActive.current) {\r\n            multipleFaceActive.current = true;\r\n            const startTime = new Date();\r\n            startTimeRef.current = startTime;\r\n            setLogs((prev) => [\r\n              ...prev,\r\n              `Multiple faces started at ${startTime.toLocaleTimeString()}`\r\n            ]);\r\n          }\r\n\r\n          try {\r\n            await fetch(\"http://localhost:4000/api/exam/proctor-event\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n              body: JSON.stringify({\r\n                examId: examId,\r\n                type: \"multiple-face\",\r\n                data: { message: `Detected ${detections.length} faces` },\r\n              }),\r\n            });\r\n          } catch (err) {\r\n            console.error(\"Error sending multiple face log:\", err);\r\n          }\r\n        } else if (multipleFaceActive.current) {\r\n          multipleFaceActive.current = false;\r\n          const endTime = new Date();\r\n          const duration = Math.round((endTime - startTimeRef.current) / 1000);\r\n          setLogs((prev) => [\r\n            ...prev,\r\n            `Multiple faces ended at ${endTime.toLocaleTimeString()} (Duration: ${duration}s)`,\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Face detection error:\", error);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [paper, examId]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const min = Math.floor(seconds / 60);\r\n    const sec = seconds % 60;\r\n    return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\r\n  };\r\n\r\n  const handleAnswerChange = (value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQ] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (isSubmitting.current) return;\r\n\r\n    if (!paper) {\r\n      alert(\"Exam data not loaded!\");\r\n      return;\r\n    }\r\n\r\n    if (tabSwitchCount < 3 && timeLeft > 0) {\r\n      const confirmSubmit = window.confirm(\"Are you sure you want to submit your exam?\");\r\n      if (!confirmSubmit) return;\r\n    }\r\n\r\n    isSubmitting.current = true;\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/api/exam/submit\", {\r\n        method: \"POST\",\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        },\r\n        body: JSON.stringify({\r\n          userId: user._id,\r\n          examId: examId,\r\n          answers: answers,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Submit failed\");\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.submissionId) {\r\n        alert(\"✅ Exam submitted successfully!\");\r\n        navigate(`/result/${data.submissionId}`);\r\n      } else {\r\n        throw new Error(\"No submission ID returned\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Submit error:\", error);\r\n      alert(\"❌ Failed to submit exam. Please try again.\");\r\n      isSubmitting.current = false;\r\n    }\r\n  };\r\n\r\n  if (!paper || !paper.questions) {\r\n    return (\r\n      <div className=\"exam-loading\">\r\n        <h3>Loading exam...</h3>\r\n        <p>Please wait while we prepare your exam.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const question = paper.questions[currentQ];\r\n\r\n  return (\r\n    <div className=\"exam-page\">\r\n      <div className=\"exam-sidebar\">\r\n        <h4>📷 Camera Monitor</h4>\r\n        <video ref={videoRef} autoPlay muted />\r\n        <div className=\"exam-timer\">⏱️ {formatTime(timeLeft)}</div>\r\n        <div className=\"exam-face-logs\">\r\n          <h4>👀 Face Detection Logs</h4>\r\n          {logs.length ? (\r\n            logs.map((log, i) => <p key={i}>{log}</p>)\r\n          ) : (\r\n            <p className=\"exam-face-logs-empty\">✅ No issues detected</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"exam-content\">\r\n        <h2>{paper.title}</h2>\r\n\r\n        {tabSwitchCount > 0 && (\r\n          <div className=\"exam-tab-warning\">\r\n            Tab Switches: {tabSwitchCount}/3\r\n            {tabSwitchCount >= 2 && \" ⚠️ One more will auto-submit!\"}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"exam-question\">\r\n          <h3>Q{currentQ + 1}: {question.text}</h3>\r\n          <div className=\"exam-options\">\r\n            {question.options.map((opt, idx) => (\r\n              <label\r\n                key={idx}\r\n                className={`exam-option-label ${answers[currentQ] === idx ? 'selected' : ''}`}\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`q${currentQ}`}\r\n                  checked={answers[currentQ] === idx}\r\n                  onChange={() => handleAnswerChange(idx)}\r\n                />\r\n                {opt}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"exam-navigation\">\r\n          {currentQ > 0 && (\r\n            <button onClick={() => setCurrentQ(currentQ - 1)} className=\"exam-nav-btn\">⬅️ Previous</button>\r\n          )}\r\n\r\n          {currentQ < paper.questions.length - 1 ? (\r\n            <button onClick={() => setCurrentQ(currentQ + 1)} className=\"exam-nav-btn\">Next ➡️</button>\r\n          ) : (\r\n            <button onClick={handleSubmit} className=\"exam-submit-btn\" disabled={isSubmitting.current}>\r\n              {isSubmitting.current ? '⏳ Submitting...' : '🚀 Submit Exam'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}