{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exam = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [status, setStatus] = useState(\"Loading...\");\n  const videoRef = useRef(null);\n  const [registeredDescriptor, setRegisteredDescriptor] = useState(null);\n\n  // Load face models\n  useEffect(() => {\n    const loadModelsAndExam = async () => {\n      setStatus(\"Loading face models...\");\n      try {\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"), faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"), faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\")]);\n        console.log(\"‚úÖ Face models loaded successfully!\");\n        console.log(\"   - TinyFaceDetector:\", faceapi.nets.tinyFaceDetector.isLoaded());\n        console.log(\"   - FaceLandmark68:\", faceapi.nets.faceLandmark68Net.isLoaded());\n        console.log(\"   - FaceRecognition:\", faceapi.nets.faceRecognitionNet.isLoaded());\n        await loadExamData();\n        await startVideo();\n        await loadRegisteredFace();\n      } catch (error) {\n        console.error(\"Error loading models:\", error);\n        setStatus(\"Error loading face models\");\n      }\n    };\n    loadModelsAndExam();\n  }, [examId, navigate]);\n\n  // Fetch exam data\n  const loadExamData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/exam/${examId}`);\n      setExam(response.data);\n      setTimeLeft(response.data.duration * 60);\n      setStatus(\"Exam ready. Starting...\");\n    } catch (error) {\n      console.error(\"Error fetching exam data:\", error);\n      setStatus(\"Error loading exam\");\n    }\n  };\n\n  // Start webcam\n  const startVideo = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      console.log(\"‚úÖ Webcam started successfully.\");\n    } catch (error) {\n      console.error(\"Error accessing webcam:\", error);\n      setStatus(\"Camera access denied\");\n    }\n  };\n\n  // Load registered user's face data\n  const loadRegisteredFace = async () => {\n    try {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      if (!userData || !userData.faceData) {\n        alert(\"No face data found. Please register again.\");\n        navigate(\"/register\");\n        return;\n      }\n      const descriptor = new Float32Array(Object.values(userData.faceData));\n      setRegisteredDescriptor(descriptor);\n      console.log(\"‚úÖ Registered face descriptor loaded.\");\n    } catch (error) {\n      console.error(\"Error loading registered face:\", error);\n    }\n  };\n\n  // Face verification\n  const verifyFaceIdentity = async () => {\n    if (!registeredDescriptor || !videoRef.current) return;\n    try {\n      const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      if (!detection) {\n        console.warn(\"‚ö†Ô∏è No face detected.\");\n        return;\n      }\n      const distance = faceapi.euclideanDistance(registeredDescriptor, detection.descriptor);\n      const threshold = 0.5;\n      const isSamePerson = distance < threshold;\n      console.log(\"üîç Face match result:\", {\n        distance: distance.toFixed(4),\n        verified: isSamePerson\n      });\n      logVerification(isSamePerson, distance);\n      if (!isSamePerson) {\n        alert(\"Identity verification failed! Exam will be terminated.\");\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      console.error(\"Error verifying face identity:\", error);\n    }\n  };\n\n  // Log verification results\n  const logVerification = (isSamePerson, distance) => {\n    const logEntry = {\n      timestamp: new Date().toLocaleString(),\n      status: isSamePerson ? \"‚úÖ Verified\" : \"‚ùå Mismatch\",\n      distance: distance.toFixed(4)\n    };\n    console.table([logEntry]);\n  };\n\n  // Run verification periodically\n  useEffect(() => {\n    if (!registeredDescriptor) return;\n    const interval = setInterval(verifyFaceIdentity, 20000);\n    return () => clearInterval(interval);\n  }, [registeredDescriptor]);\n\n  // Timer\n  useEffect(() => {\n    if (timeLeft <= 0) return;\n    const timer = setInterval(() => setTimeLeft(prev => prev - 1), 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleAnswerChange = (questionId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const handleSubmit = async () => {\n    try {\n      await axios.post(`http://localhost:5000/api/exam/${examId}/submit`, {\n        answers\n      });\n      alert(\"Exam submitted successfully!\");\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Error submitting exam:\", error);\n      alert(\"Error submitting exam!\");\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Online Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      width: \"320\",\n      height: \"240\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u23F1 Time Left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), exam ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [exam.questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [idx + 1, \". \", q.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: q._id,\n            value: opt,\n            checked: answers[q._id] === opt,\n            onChange: () => handleAnswerChange(q._id, opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), opt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this))]\n      }, q._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading exam...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Exam, \"4ZwELp3XxJIKpwDXYFFbrDAazNs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useState","useEffect","useRef","faceapi","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Exam","_s","examId","navigate","exam","setExam","answers","setAnswers","timeLeft","setTimeLeft","status","setStatus","videoRef","registeredDescriptor","setRegisteredDescriptor","loadModelsAndExam","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","console","log","isLoaded","loadExamData","startVideo","loadRegisteredFace","error","response","get","data","duration","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","userData","JSON","parse","localStorage","getItem","faceData","alert","descriptor","Float32Array","Object","values","verifyFaceIdentity","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","warn","distance","euclideanDistance","threshold","isSamePerson","toFixed","verified","logVerification","logEntry","timestamp","Date","toLocaleString","table","interval","setInterval","clearInterval","timer","prev","handleAnswerChange","questionId","value","handleSubmit","post","formatTime","seconds","mins","Math","floor","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","width","height","questions","map","q","idx","text","options","opt","i","type","name","_id","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Exam = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [exam, setExam] = useState(null);\r\n  const [answers, setAnswers] = useState({});\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [status, setStatus] = useState(\"Loading...\");\r\n  const videoRef = useRef(null);\r\n  const [registeredDescriptor, setRegisteredDescriptor] = useState(null);\r\n\r\n  // Load face models\r\n  useEffect(() => {\r\n    const loadModelsAndExam = async () => {\r\n      setStatus(\"Loading face models...\");\r\n      try {\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\r\n        ]);\r\n\r\n        console.log(\"‚úÖ Face models loaded successfully!\");\r\n        console.log(\"   - TinyFaceDetector:\", faceapi.nets.tinyFaceDetector.isLoaded());\r\n        console.log(\"   - FaceLandmark68:\", faceapi.nets.faceLandmark68Net.isLoaded());\r\n        console.log(\"   - FaceRecognition:\", faceapi.nets.faceRecognitionNet.isLoaded());\r\n\r\n        await loadExamData();\r\n        await startVideo();\r\n        await loadRegisteredFace();\r\n      } catch (error) {\r\n        console.error(\"Error loading models:\", error);\r\n        setStatus(\"Error loading face models\");\r\n      }\r\n    };\r\n    loadModelsAndExam();\r\n  }, [examId, navigate]);\r\n\r\n  // Fetch exam data\r\n  const loadExamData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/exam/${examId}`);\r\n      setExam(response.data);\r\n      setTimeLeft(response.data.duration * 60);\r\n      setStatus(\"Exam ready. Starting...\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching exam data:\", error);\r\n      setStatus(\"Error loading exam\");\r\n    }\r\n  };\r\n\r\n  // Start webcam\r\n  const startVideo = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n      console.log(\"‚úÖ Webcam started successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error accessing webcam:\", error);\r\n      setStatus(\"Camera access denied\");\r\n    }\r\n  };\r\n\r\n  // Load registered user's face data\r\n  const loadRegisteredFace = async () => {\r\n    try {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (!userData || !userData.faceData) {\r\n        alert(\"No face data found. Please register again.\");\r\n        navigate(\"/register\");\r\n        return;\r\n      }\r\n      const descriptor = new Float32Array(Object.values(userData.faceData));\r\n      setRegisteredDescriptor(descriptor);\r\n      console.log(\"‚úÖ Registered face descriptor loaded.\");\r\n    } catch (error) {\r\n      console.error(\"Error loading registered face:\", error);\r\n    }\r\n  };\r\n\r\n  // Face verification\r\n  const verifyFaceIdentity = async () => {\r\n    if (!registeredDescriptor || !videoRef.current) return;\r\n\r\n    try {\r\n      const detection = await faceapi\r\n        .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n\r\n      if (!detection) {\r\n        console.warn(\"‚ö†Ô∏è No face detected.\");\r\n        return;\r\n      }\r\n\r\n      const distance = faceapi.euclideanDistance(registeredDescriptor, detection.descriptor);\r\n      const threshold = 0.5;\r\n      const isSamePerson = distance < threshold;\r\n\r\n      console.log(\"üîç Face match result:\", {\r\n        distance: distance.toFixed(4),\r\n        verified: isSamePerson,\r\n      });\r\n\r\n      logVerification(isSamePerson, distance);\r\n      if (!isSamePerson) {\r\n        alert(\"Identity verification failed! Exam will be terminated.\");\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying face identity:\", error);\r\n    }\r\n  };\r\n\r\n  // Log verification results\r\n  const logVerification = (isSamePerson, distance) => {\r\n    const logEntry = {\r\n      timestamp: new Date().toLocaleString(),\r\n      status: isSamePerson ? \"‚úÖ Verified\" : \"‚ùå Mismatch\",\r\n      distance: distance.toFixed(4),\r\n    };\r\n    console.table([logEntry]);\r\n  };\r\n\r\n  // Run verification periodically\r\n  useEffect(() => {\r\n    if (!registeredDescriptor) return;\r\n    const interval = setInterval(verifyFaceIdentity, 20000);\r\n    return () => clearInterval(interval);\r\n  }, [registeredDescriptor]);\r\n\r\n  // Timer\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) return;\r\n    const timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  const handleAnswerChange = (questionId, value) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: value }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/exam/${examId}/submit`, { answers });\r\n      alert(\"Exam submitted successfully!\");\r\n      navigate(\"/dashboard\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting exam:\", error);\r\n      alert(\"Error submitting exam!\");\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"exam-container\">\r\n      <h2>Online Exam</h2>\r\n      <p>{status}</p>\r\n      <video ref={videoRef} autoPlay muted width=\"320\" height=\"240\" />\r\n      <p>‚è± Time Left: {formatTime(timeLeft)}</p>\r\n\r\n      {exam ? (\r\n        <div className=\"questions\">\r\n          {exam.questions.map((q, idx) => (\r\n            <div key={q._id} className=\"question\">\r\n              <p>\r\n                {idx + 1}. {q.text}\r\n              </p>\r\n              {q.options.map((opt, i) => (\r\n                <label key={i}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={q._id}\r\n                    value={opt}\r\n                    checked={answers[q._id] === opt}\r\n                    onChange={() => handleAnswerChange(q._id, opt)}\r\n                  />\r\n                  {opt}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit}>Submit Exam</button>\r\n        </div>\r\n      ) : (\r\n        <p>Loading exam...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}