{"ast":null,"code":"var _jsxFileName = \"C:\\\\Online Exam Proctoring System\\\\frontend\\\\src\\\\components\\\\FaceRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport \"./FaceRegistration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FaceRegistration({\n  user,\n  onComplete\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [modelsLoaded, setModelsLoaded] = useState(false);\n  const [cameraStarted, setCameraStarted] = useState(false);\n  const [captureStatus, setCaptureStatus] = useState(\"idle\"); // idle | capturing | captured | saved\n  const [message, setMessage] = useState(\"Loading face detection models...\");\n  const [captureCount, setCaptureCount] = useState(0);\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\n  const detectionInterval = useRef(null);\n\n  // Load face-api models on mount\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        setModelsLoaded(true);\n        setMessage(\"Models loaded. Start your camera.\");\n      } catch (err) {\n        console.error(err);\n        setMessage(\"Failed to load face detection models.\");\n      }\n    };\n    loadModels();\n    return () => stopCamera();\n  }, []);\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      videoRef.current.srcObject = stream;\n      setCameraStarted(true);\n      setMessage(\"Camera started. Position your face and click 'Start Capture'.\");\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Cannot access camera. Please allow webcam permissions.\");\n    }\n  };\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    setCameraStarted(false);\n  };\n  const startCapture = () => {\n    if (!cameraStarted || !modelsLoaded) return;\n    setCaptureStatus(\"capturing\");\n    setMessage(\"Capturing face samples. Keep your face steady...\");\n    setCaptureCount(0);\n    const descriptors = [];\n    detectionInterval.current = setInterval(async () => {\n      if (!videoRef.current) return;\n      const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      if (detection) {\n        descriptors.push(Array.from(detection.descriptor));\n        setCaptureCount(descriptors.length);\n\n        // Draw face on canvas\n        if (canvasRef.current) {\n          const dims = faceapi.matchDimensions(canvasRef.current, videoRef.current, true);\n          const resized = faceapi.resizeResults(detection, dims);\n          const ctx = canvasRef.current.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n          faceapi.draw.drawDetections(canvasRef.current, resized);\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\n        }\n        if (descriptors.length >= 5) {\n          clearInterval(detectionInterval.current);\n          const avgDescriptor = averageDescriptors(descriptors);\n          setCapturedDescriptor(avgDescriptor);\n          setCaptureStatus(\"captured\");\n          setMessage(\"Face captured successfully! Click 'Save Face'.\");\n        }\n      } else {\n        setMessage(\"No face detected. Please position your face clearly.\");\n      }\n    }, 500);\n  };\n  const averageDescriptors = descriptors => {\n    const avg = new Array(128).fill(0);\n    descriptors.forEach(desc => desc.forEach((val, i) => avg[i] += val));\n    return avg.map(val => val / descriptors.length);\n  };\n  const saveFace = async () => {\n    if (!capturedDescriptor) return;\n    setCaptureStatus(\"saving\");\n    setMessage(\"Saving face data...\");\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(\"http://localhost:4000/api/auth/register-face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          faceDescriptor: capturedDescriptor\n        })\n      });\n      if (res.ok) {\n        setCaptureStatus(\"saved\");\n        setMessage(\"Face registered successfully!\");\n        stopCamera();\n        if (onComplete) setTimeout(() => onComplete(), 2000);\n      } else {\n        throw new Error(\"Failed to register face\");\n      }\n    } catch (err) {\n      console.error(err);\n      setCaptureStatus(\"captured\");\n      setMessage(\"Error saving face. Try again.\");\n    }\n  };\n  const retryCapture = () => {\n    setCaptureStatus(\"idle\");\n    setMessage(\"Position your face and click 'Start Capture'.\");\n    setCaptureCount(0);\n    setCapturedDescriptor(null);\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"face-registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCF8 Face Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        width: \"320\",\n        height: \"240\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"320\",\n        height: \"240\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Captured samples: \", captureCount, \"/5\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [!cameraStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 28\n      }, this), cameraStarted && captureStatus === \"idle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        disabled: !modelsLoaded,\n        children: \"Start Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), captureStatus === \"captured\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveFace,\n        children: \"Save Face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 42\n      }, this), [\"captured\", \"saved\"].includes(captureStatus) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: retryCapture,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceRegistration, \"jmx8//oAgdjmpQaSYE2nBnNvOz4=\");\n_c = FaceRegistration;\nvar _c;\n$RefreshReg$(_c, \"FaceRegistration\");","map":{"version":3,"names":["React","useEffect","useRef","useState","faceapi","jsxDEV","_jsxDEV","FaceRegistration","user","onComplete","_s","videoRef","canvasRef","modelsLoaded","setModelsLoaded","cameraStarted","setCameraStarted","captureStatus","setCaptureStatus","message","setMessage","captureCount","setCaptureCount","capturedDescriptor","setCapturedDescriptor","detectionInterval","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","err","console","error","stopCamera","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","height","current","srcObject","getTracks","forEach","track","stop","startCapture","descriptors","setInterval","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","push","Array","from","descriptor","length","dims","matchDimensions","resized","resizeResults","ctx","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","clearInterval","avgDescriptor","averageDescriptors","avg","fill","desc","val","i","map","saveFace","token","localStorage","getItem","res","fetch","method","headers","Authorization","body","JSON","stringify","faceDescriptor","ok","setTimeout","Error","retryCapture","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onClick","disabled","includes","_c","$RefreshReg$"],"sources":["C:/Online Exam Proctoring System/frontend/src/components/FaceRegistration.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport \"./FaceRegistration.css\";\r\n\r\nexport default function FaceRegistration({ user, onComplete }) {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n  const [cameraStarted, setCameraStarted] = useState(false);\r\n  const [captureStatus, setCaptureStatus] = useState(\"idle\"); // idle | capturing | captured | saved\r\n  const [message, setMessage] = useState(\"Loading face detection models...\");\r\n  const [captureCount, setCaptureCount] = useState(0);\r\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\r\n\r\n  const detectionInterval = useRef(null);\r\n\r\n  // Load face-api models on mount\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n        ]);\r\n        setModelsLoaded(true);\r\n        setMessage(\"Models loaded. Start your camera.\");\r\n      } catch (err) {\r\n        console.error(err);\r\n        setMessage(\"Failed to load face detection models.\");\r\n      }\r\n    };\r\n    loadModels();\r\n    return () => stopCamera();\r\n  }, []);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: { width: 640, height: 480 } });\r\n      videoRef.current.srcObject = stream;\r\n      setCameraStarted(true);\r\n      setMessage(\"Camera started. Position your face and click 'Start Capture'.\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(\"Cannot access camera. Please allow webcam permissions.\");\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n    setCameraStarted(false);\r\n  };\r\n\r\n  const startCapture = () => {\r\n    if (!cameraStarted || !modelsLoaded) return;\r\n    setCaptureStatus(\"capturing\");\r\n    setMessage(\"Capturing face samples. Keep your face steady...\");\r\n    setCaptureCount(0);\r\n\r\n    const descriptors = [];\r\n\r\n    detectionInterval.current = setInterval(async () => {\r\n      if (!videoRef.current) return;\r\n\r\n      const detection = await faceapi\r\n        .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n\r\n      if (detection) {\r\n        descriptors.push(Array.from(detection.descriptor));\r\n        setCaptureCount(descriptors.length);\r\n\r\n        // Draw face on canvas\r\n        if (canvasRef.current) {\r\n          const dims = faceapi.matchDimensions(canvasRef.current, videoRef.current, true);\r\n          const resized = faceapi.resizeResults(detection, dims);\r\n          const ctx = canvasRef.current.getContext(\"2d\");\r\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n          faceapi.draw.drawDetections(canvasRef.current, resized);\r\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\r\n        }\r\n\r\n        if (descriptors.length >= 5) {\r\n          clearInterval(detectionInterval.current);\r\n          const avgDescriptor = averageDescriptors(descriptors);\r\n          setCapturedDescriptor(avgDescriptor);\r\n          setCaptureStatus(\"captured\");\r\n          setMessage(\"Face captured successfully! Click 'Save Face'.\");\r\n        }\r\n      } else {\r\n        setMessage(\"No face detected. Please position your face clearly.\");\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  const averageDescriptors = (descriptors) => {\r\n    const avg = new Array(128).fill(0);\r\n    descriptors.forEach(desc => desc.forEach((val, i) => (avg[i] += val)));\r\n    return avg.map(val => val / descriptors.length);\r\n  };\r\n\r\n  const saveFace = async () => {\r\n    if (!capturedDescriptor) return;\r\n\r\n    setCaptureStatus(\"saving\");\r\n    setMessage(\"Saving face data...\");\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await fetch(\"http://localhost:4000/api/auth/register-face\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n        body: JSON.stringify({ faceDescriptor: capturedDescriptor }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        setCaptureStatus(\"saved\");\r\n        setMessage(\"Face registered successfully!\");\r\n        stopCamera();\r\n        if (onComplete) setTimeout(() => onComplete(), 2000);\r\n      } else {\r\n        throw new Error(\"Failed to register face\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setCaptureStatus(\"captured\");\r\n      setMessage(\"Error saving face. Try again.\");\r\n    }\r\n  };\r\n\r\n  const retryCapture = () => {\r\n    setCaptureStatus(\"idle\");\r\n    setMessage(\"Position your face and click 'Start Capture'.\");\r\n    setCaptureCount(0);\r\n    setCapturedDescriptor(null);\r\n    if (canvasRef.current) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"face-registration-container\">\r\n      <h2>📸 Face Registration</h2>\r\n      <p>{message}</p>\r\n\r\n      <div className=\"camera-container\">\r\n        <video ref={videoRef} autoPlay muted width=\"320\" height=\"240\" />\r\n        <canvas ref={canvasRef} width=\"320\" height=\"240\" />\r\n      </div>\r\n\r\n      <p>Captured samples: {captureCount}/5</p>\r\n\r\n      <div className=\"action-buttons\">\r\n        {!cameraStarted && <button onClick={startCamera}>Start Camera</button>}\r\n        {cameraStarted && captureStatus === \"idle\" && (\r\n          <button onClick={startCapture} disabled={!modelsLoaded}>Start Capture</button>\r\n        )}\r\n        {captureStatus === \"captured\" && <button onClick={saveFace}>Save Face</button>}\r\n        {[\"captured\", \"saved\"].includes(captureStatus) && <button onClick={retryCapture}>Retry</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,kCAAkC,CAAC;EAC1E,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMsB,iBAAiB,GAAGvB,MAAM,CAAC,IAAI,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,SAAS;QACpD,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChB5B,OAAO,CAAC6B,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACR,SAAS,CAAC,EACpDvB,OAAO,CAAC6B,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACR,SAAS,CAAC,EACrDvB,OAAO,CAAC6B,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACR,SAAS,CAAC,CACvD,CAAC;QACFb,eAAe,CAAC,IAAI,CAAC;QACrBM,UAAU,CAAC,mCAAmC,CAAC;MACjD,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBlB,UAAU,CAAC,uCAAuC,CAAC;MACrD;IACF,CAAC;IACDM,UAAU,CAAC,CAAC;IACZ,OAAO,MAAMe,UAAU,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAC,CAAC;MAChGtC,QAAQ,CAACuC,OAAO,CAACC,SAAS,GAAGR,MAAM;MACnC3B,gBAAgB,CAAC,IAAI,CAAC;MACtBI,UAAU,CAAC,+DAA+D,CAAC;IAC7E,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBlB,UAAU,CAAC,wDAAwD,CAAC;IACtE;EACF,CAAC;EAED,MAAMqB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI9B,QAAQ,CAACuC,OAAO,IAAIvC,QAAQ,CAACuC,OAAO,CAACC,SAAS,EAAE;MAClDxC,QAAQ,CAACuC,OAAO,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACvE;IACAvC,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMwC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACzC,aAAa,IAAI,CAACF,YAAY,EAAE;IACrCK,gBAAgB,CAAC,WAAW,CAAC;IAC7BE,UAAU,CAAC,kDAAkD,CAAC;IAC9DE,eAAe,CAAC,CAAC,CAAC;IAElB,MAAMmC,WAAW,GAAG,EAAE;IAEtBhC,iBAAiB,CAACyB,OAAO,GAAGQ,WAAW,CAAC,YAAY;MAClD,IAAI,CAAC/C,QAAQ,CAACuC,OAAO,EAAE;MAEvB,MAAMS,SAAS,GAAG,MAAMvD,OAAO,CAC5BwD,gBAAgB,CAACjD,QAAQ,CAACuC,OAAO,EAAE,IAAI9C,OAAO,CAACyD,uBAAuB,CAAC,CAAC,CAAC,CACzEC,iBAAiB,CAAC,CAAC,CACnBC,kBAAkB,CAAC,CAAC;MAEvB,IAAIJ,SAAS,EAAE;QACbF,WAAW,CAACO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACP,SAAS,CAACQ,UAAU,CAAC,CAAC;QAClD7C,eAAe,CAACmC,WAAW,CAACW,MAAM,CAAC;;QAEnC;QACA,IAAIxD,SAAS,CAACsC,OAAO,EAAE;UACrB,MAAMmB,IAAI,GAAGjE,OAAO,CAACkE,eAAe,CAAC1D,SAAS,CAACsC,OAAO,EAAEvC,QAAQ,CAACuC,OAAO,EAAE,IAAI,CAAC;UAC/E,MAAMqB,OAAO,GAAGnE,OAAO,CAACoE,aAAa,CAACb,SAAS,EAAEU,IAAI,CAAC;UACtD,MAAMI,GAAG,GAAG7D,SAAS,CAACsC,OAAO,CAACwB,UAAU,CAAC,IAAI,CAAC;UAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE/D,SAAS,CAACsC,OAAO,CAACF,KAAK,EAAEpC,SAAS,CAACsC,OAAO,CAACD,MAAM,CAAC;UACtE7C,OAAO,CAACwE,IAAI,CAACC,cAAc,CAACjE,SAAS,CAACsC,OAAO,EAAEqB,OAAO,CAAC;UACvDnE,OAAO,CAACwE,IAAI,CAACE,iBAAiB,CAAClE,SAAS,CAACsC,OAAO,EAAEqB,OAAO,CAAC;QAC5D;QAEA,IAAId,WAAW,CAACW,MAAM,IAAI,CAAC,EAAE;UAC3BW,aAAa,CAACtD,iBAAiB,CAACyB,OAAO,CAAC;UACxC,MAAM8B,aAAa,GAAGC,kBAAkB,CAACxB,WAAW,CAAC;UACrDjC,qBAAqB,CAACwD,aAAa,CAAC;UACpC9D,gBAAgB,CAAC,UAAU,CAAC;UAC5BE,UAAU,CAAC,gDAAgD,CAAC;QAC9D;MACF,CAAC,MAAM;QACLA,UAAU,CAAC,sDAAsD,CAAC;MACpE;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAM6D,kBAAkB,GAAIxB,WAAW,IAAK;IAC1C,MAAMyB,GAAG,GAAG,IAAIjB,KAAK,CAAC,GAAG,CAAC,CAACkB,IAAI,CAAC,CAAC,CAAC;IAClC1B,WAAW,CAACJ,OAAO,CAAC+B,IAAI,IAAIA,IAAI,CAAC/B,OAAO,CAAC,CAACgC,GAAG,EAAEC,CAAC,KAAMJ,GAAG,CAACI,CAAC,CAAC,IAAID,GAAI,CAAC,CAAC;IACtE,OAAOH,GAAG,CAACK,GAAG,CAACF,GAAG,IAAIA,GAAG,GAAG5B,WAAW,CAACW,MAAM,CAAC;EACjD,CAAC;EAED,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACjE,kBAAkB,EAAE;IAEzBL,gBAAgB,CAAC,QAAQ,CAAC;IAC1BE,UAAU,CAAC,qBAAqB,CAAC;IAEjC,IAAI;MACF,MAAMqE,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG,CAAC;QACjFQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,cAAc,EAAE7E;QAAmB,CAAC;MAC7D,CAAC,CAAC;MAEF,IAAIqE,GAAG,CAACS,EAAE,EAAE;QACVnF,gBAAgB,CAAC,OAAO,CAAC;QACzBE,UAAU,CAAC,+BAA+B,CAAC;QAC3CqB,UAAU,CAAC,CAAC;QACZ,IAAIhC,UAAU,EAAE6F,UAAU,CAAC,MAAM7F,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC;MACtD,CAAC,MAAM;QACL,MAAM,IAAI8F,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOjE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBpB,gBAAgB,CAAC,UAAU,CAAC;MAC5BE,UAAU,CAAC,+BAA+B,CAAC;IAC7C;EACF,CAAC;EAED,MAAMoF,YAAY,GAAGA,CAAA,KAAM;IACzBtF,gBAAgB,CAAC,MAAM,CAAC;IACxBE,UAAU,CAAC,+CAA+C,CAAC;IAC3DE,eAAe,CAAC,CAAC,CAAC;IAClBE,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAIZ,SAAS,CAACsC,OAAO,EAAE;MACrB,MAAMuB,GAAG,GAAG7D,SAAS,CAACsC,OAAO,CAACwB,UAAU,CAAC,IAAI,CAAC;MAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE/D,SAAS,CAACsC,OAAO,CAACF,KAAK,EAAEpC,SAAS,CAACsC,OAAO,CAACD,MAAM,CAAC;IACxE;EACF,CAAC;EAED,oBACE3C,OAAA;IAAKmG,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CpG,OAAA;MAAAoG,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxG,OAAA;MAAAoG,QAAA,EAAIvF;IAAO;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhBxG,OAAA;MAAKmG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpG,OAAA;QAAOyG,GAAG,EAAEpG,QAAS;QAACqG,QAAQ;QAACC,KAAK;QAACjE,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChExG,OAAA;QAAQyG,GAAG,EAAEnG,SAAU;QAACoC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAENxG,OAAA;MAAAoG,QAAA,GAAG,oBAAkB,EAACrF,YAAY,EAAC,IAAE;IAAA;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEzCxG,OAAA;MAAKmG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC5B,CAAC3F,aAAa,iBAAIT,OAAA;QAAQ4G,OAAO,EAAExE,WAAY;QAAAgE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrE/F,aAAa,IAAIE,aAAa,KAAK,MAAM,iBACxCX,OAAA;QAAQ4G,OAAO,EAAE1D,YAAa;QAAC2D,QAAQ,EAAE,CAACtG,YAAa;QAAA6F,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC9E,EACA7F,aAAa,KAAK,UAAU,iBAAIX,OAAA;QAAQ4G,OAAO,EAAE1B,QAAS;QAAAkB,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7E,CAAC,UAAU,EAAE,OAAO,CAAC,CAACM,QAAQ,CAACnG,aAAa,CAAC,iBAAIX,OAAA;QAAQ4G,OAAO,EAAEV,YAAa;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpG,EAAA,CApKuBH,gBAAgB;AAAA8G,EAAA,GAAhB9G,gBAAgB;AAAA,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}